'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file underscore-property-hack 的检测逻辑
 *       Checks for the underscore property hack (targets IE6)
 *       https://github.com/CSSLint/csslint/wiki/Disallow-underscore-hack
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'underscore-property-hack';

/**
 * 错误的信息
 *
 * @const
 * @type {string}
 */
var MSG = 'Disallow properties with a underscore prefix';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {

        if (opts.ruleVal) {

            css.walkDecls(function (decl) {
                if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                    return;
                }

                var before = decl.raws.before;

                if (before.slice(-1) === '_') {
                    var source = decl.source;
                    var line = source.start.line;
                    var lineContent = (0, _util.getLineContent)(line, source.input.css);
                    var col = source.start.column;
                    result.warn(RULENAME, {
                        node: decl,
                        ruleName: RULENAME,
                        line: line,
                        col: col,
                        message: MSG,
                        colorMessage: '`' + (0, _util.changeColorByStartAndEndIndex)(lineContent, col, source.end.column) + '` '
                    });

                    global.CSSHINT_INVALID_ALL_COUNT++;
                }
            });
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL3VuZGVyc2NvcmUtcHJvcGVydHktaGFjay5qcyJdLCJuYW1lcyI6WyJSVUxFTkFNRSIsIk1TRyIsImNoZWNrIiwicG9zdGNzcyIsInBsdWdpbiIsImNzcyIsInJlc3VsdCIsIm9wdHMiLCJydWxlVmFsIiwid2Fsa0RlY2xzIiwiZ2xvYmFsIiwiQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCIsIm1heEVycm9yIiwiYmVmb3JlIiwiZGVjbCIsInJhd3MiLCJzbGljZSIsInNvdXJjZSIsImxpbmUiLCJzdGFydCIsImxpbmVDb250ZW50IiwiaW5wdXQiLCJjb2wiLCJjb2x1bW4iLCJ3YXJuIiwibm9kZSIsInJ1bGVOYW1lIiwibWVzc2FnZSIsImNvbG9yTWVzc2FnZSIsImVuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU9BOzs7O0FBRUE7Ozs7QUFFQTs7Ozs7O0FBWEE7Ozs7Ozs7QUFpQkEsSUFBTUEsV0FBVywwQkFBakI7O0FBRUE7Ozs7OztBQU1BLElBQU1DLE1BQU0sOENBQVo7O0FBRUE7Ozs7Ozs7O0FBUU8sSUFBTUMsd0JBQVFDLGtCQUFRQyxNQUFSLENBQWVKLFFBQWYsRUFBeUI7QUFBQSxXQUMxQyxVQUFDSyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7O0FBRWIsWUFBSUMsS0FBS0MsT0FBVCxFQUFrQjs7QUFFZEgsZ0JBQUlJLFNBQUosQ0FBYyxnQkFBUTtBQUNsQixvQkFBSUMsT0FBT0MseUJBQVAsSUFBb0NKLEtBQUtLLFFBQTdDLEVBQXVEO0FBQ25EO0FBQ0g7O0FBRUQsb0JBQU1DLFNBQVNDLEtBQUtDLElBQUwsQ0FBVUYsTUFBekI7O0FBRUEsb0JBQUlBLE9BQU9HLEtBQVAsQ0FBYSxDQUFDLENBQWQsTUFBcUIsR0FBekIsRUFBOEI7QUFDMUIsd0JBQU1DLFNBQVNILEtBQUtHLE1BQXBCO0FBQ0Esd0JBQU1DLE9BQU9ELE9BQU9FLEtBQVAsQ0FBYUQsSUFBMUI7QUFDQSx3QkFBTUUsY0FBYywwQkFBZUYsSUFBZixFQUFxQkQsT0FBT0ksS0FBUCxDQUFhaEIsR0FBbEMsQ0FBcEI7QUFDQSx3QkFBTWlCLE1BQU1MLE9BQU9FLEtBQVAsQ0FBYUksTUFBekI7QUFDQWpCLDJCQUFPa0IsSUFBUCxDQUFZeEIsUUFBWixFQUFzQjtBQUNsQnlCLDhCQUFNWCxJQURZO0FBRWxCWSxrQ0FBVTFCLFFBRlE7QUFHbEJrQiw4QkFBTUEsSUFIWTtBQUlsQkksNkJBQUtBLEdBSmE7QUFLbEJLLGlDQUFTMUIsR0FMUztBQU1sQjJCLHNDQUFjLE1BQ1IseUNBQ0VSLFdBREYsRUFDZUUsR0FEZixFQUNvQkwsT0FBT1ksR0FBUCxDQUFXTixNQUQvQixDQURRLEdBSVI7QUFWWSxxQkFBdEI7O0FBYUFiLDJCQUFPQyx5QkFBUDtBQUNIO0FBQ0osYUEzQkQ7QUE0Qkg7QUFDSixLQWxDeUM7QUFBQSxDQUF6QixDQUFkIiwiZmlsZSI6InVuZGVyc2NvcmUtcHJvcGVydHktaGFjay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgdW5kZXJzY29yZS1wcm9wZXJ0eS1oYWNrIOeahOajgOa1i+mAu+i+kVxuICogICAgICAgQ2hlY2tzIGZvciB0aGUgdW5kZXJzY29yZSBwcm9wZXJ0eSBoYWNrICh0YXJnZXRzIElFNilcbiAqICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9DU1NMaW50L2Nzc2xpbnQvd2lraS9EaXNhbGxvdy11bmRlcnNjb3JlLWhhY2tcbiAqIEBhdXRob3IgaWVsZ25hdyh3dWppMDIyM0BnbWFpbC5jb20pXG4gKi9cblxuaW1wb3J0IHBvc3Rjc3MgZnJvbSAncG9zdGNzcyc7XG5cbmltcG9ydCB7Z2V0TGluZUNvbnRlbnQsIGNoYW5nZUNvbG9yQnlTdGFydEFuZEVuZEluZGV4fSBmcm9tICcuLi91dGlsJztcblxuLyoqXG4gKiDlvZPliY3mlofku7bmiYDku6PooajnmoTop4TliJnlkI3np7BcbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmNvbnN0IFJVTEVOQU1FID0gJ3VuZGVyc2NvcmUtcHJvcGVydHktaGFjayc7XG5cbi8qKlxuICog6ZSZ6K+v55qE5L+h5oGvXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5jb25zdCBNU0cgPSAnRGlzYWxsb3cgcHJvcGVydGllcyB3aXRoIGEgdW5kZXJzY29yZSBwcmVmaXgnO1xuXG4vKipcbiAqIOWFt+S9k+eahOajgOa1i+mAu+i+kVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIOWPguaVsFxuICogQHBhcmFtIHsqfSBvcHRzLnJ1bGVWYWwg5b2T5YmN6KeE5YiZ5YW35L2T6YWN572u55qE5YC8XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlQ29udGVudCDmlofku7blhoXlrrlcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLmZpbGVQYXRoIOaWh+S7tui3r+W+hFxuICovXG5leHBvcnQgY29uc3QgY2hlY2sgPSBwb3N0Y3NzLnBsdWdpbihSVUxFTkFNRSwgb3B0cyA9PlxuICAgIChjc3MsIHJlc3VsdCkgPT4ge1xuXG4gICAgICAgIGlmIChvcHRzLnJ1bGVWYWwpIHtcblxuICAgICAgICAgICAgY3NzLndhbGtEZWNscyhkZWNsID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQgPj0gb3B0cy5tYXhFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgYmVmb3JlID0gZGVjbC5yYXdzLmJlZm9yZTtcblxuICAgICAgICAgICAgICAgIGlmIChiZWZvcmUuc2xpY2UoLTEpID09PSAnXycpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc291cmNlID0gZGVjbC5zb3VyY2U7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBzb3VyY2Uuc3RhcnQubGluZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluZUNvbnRlbnQgPSBnZXRMaW5lQ29udGVudChsaW5lLCBzb3VyY2UuaW5wdXQuY3NzKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sID0gc291cmNlLnN0YXJ0LmNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lndhcm4oUlVMRU5BTUUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGU6IGRlY2wsXG4gICAgICAgICAgICAgICAgICAgICAgICBydWxlTmFtZTogUlVMRU5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lOiBsaW5lLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sOiBjb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBNU0csXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvck1lc3NhZ2U6ICdgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgY2hhbmdlQ29sb3JCeVN0YXJ0QW5kRW5kSW5kZXgoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVDb250ZW50LCBjb2wsIHNvdXJjZS5lbmQuY29sdW1uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2AgJ1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBnbG9iYWwuQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuKTtcbiJdfQ==