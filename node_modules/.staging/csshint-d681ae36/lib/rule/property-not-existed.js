'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _prefixes = require('../prefixes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixList = (0, _prefixes.getPrefixList)();

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file property-not-existed 的检测逻辑，检测属性是否存在
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'property-not-existed';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {

        if (opts.ruleVal) {

            css.walkDecls(function (decl) {
                if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                    return;
                }

                var prop = decl.prop;
                var standardProperty = prop.replace(/^\-(webkit|moz|ms|o)\-/g, '');
                // 标准模式在 prefixList 中，那么如果 propertyName 不在 prefixList 中
                // 即这个属性用错了，例如 -o-animation
                if (prefixList.indexOf(standardProperty) > -1) {
                    if (prefixList.indexOf(prop) <= -1) {

                        var source = decl.source;
                        var line = source.start.line;
                        var col = source.start.column;

                        result.warn(RULENAME, {
                            node: decl,
                            ruleName: RULENAME,
                            line: line,
                            col: col,
                            message: '' + 'Current property ' + '`' + prop + '` ' + 'is not existed',
                            colorMessage: '' + 'Current property ' + '`' + _chalk2.default.magenta(prop) + '` ' + 'is not existed'
                        });
                        global.CSSHINT_INVALID_ALL_COUNT++;
                    }
                }
            });
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL3Byb3BlcnR5LW5vdC1leGlzdGVkLmpzIl0sIm5hbWVzIjpbInByZWZpeExpc3QiLCJSVUxFTkFNRSIsImNoZWNrIiwicG9zdGNzcyIsInBsdWdpbiIsImNzcyIsInJlc3VsdCIsIm9wdHMiLCJydWxlVmFsIiwid2Fsa0RlY2xzIiwiZ2xvYmFsIiwiQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCIsIm1heEVycm9yIiwicHJvcCIsImRlY2wiLCJzdGFuZGFyZFByb3BlcnR5IiwicmVwbGFjZSIsImluZGV4T2YiLCJzb3VyY2UiLCJsaW5lIiwic3RhcnQiLCJjb2wiLCJjb2x1bW4iLCJ3YXJuIiwibm9kZSIsInJ1bGVOYW1lIiwibWVzc2FnZSIsImNvbG9yTWVzc2FnZSIsImNoYWxrIiwibWFnZW50YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUVBLElBQU1BLGFBQWEsOEJBQW5COztBQUVBOzs7Ozs7QUFaQTs7Ozs7QUFrQkEsSUFBTUMsV0FBVyxzQkFBakI7O0FBRUE7Ozs7Ozs7O0FBUU8sSUFBTUMsd0JBQVFDLGtCQUFRQyxNQUFSLENBQWVILFFBQWYsRUFBeUI7QUFBQSxXQUMxQyxVQUFDSSxHQUFELEVBQU1DLE1BQU4sRUFBaUI7O0FBRWIsWUFBSUMsS0FBS0MsT0FBVCxFQUFrQjs7QUFFZEgsZ0JBQUlJLFNBQUosQ0FBYyxnQkFBUTtBQUNsQixvQkFBSUMsT0FBT0MseUJBQVAsSUFBb0NKLEtBQUtLLFFBQTdDLEVBQXVEO0FBQ25EO0FBQ0g7O0FBRUQsb0JBQU1DLE9BQU9DLEtBQUtELElBQWxCO0FBQ0Esb0JBQU1FLG1CQUFtQkYsS0FBS0csT0FBTCxDQUFhLHlCQUFiLEVBQXdDLEVBQXhDLENBQXpCO0FBQ0E7QUFDQTtBQUNBLG9CQUFJaEIsV0FBV2lCLE9BQVgsQ0FBbUJGLGdCQUFuQixJQUF1QyxDQUFDLENBQTVDLEVBQStDO0FBQzNDLHdCQUFJZixXQUFXaUIsT0FBWCxDQUFtQkosSUFBbkIsS0FBNEIsQ0FBQyxDQUFqQyxFQUFvQzs7QUFFaEMsNEJBQU1LLFNBQVNKLEtBQUtJLE1BQXBCO0FBQ0EsNEJBQU1DLE9BQU9ELE9BQU9FLEtBQVAsQ0FBYUQsSUFBMUI7QUFDQSw0QkFBTUUsTUFBTUgsT0FBT0UsS0FBUCxDQUFhRSxNQUF6Qjs7QUFFQWhCLCtCQUFPaUIsSUFBUCxDQUFZdEIsUUFBWixFQUFzQjtBQUNsQnVCLGtDQUFNVixJQURZO0FBRWxCVyxzQ0FBVXhCLFFBRlE7QUFHbEJrQixrQ0FBTUEsSUFIWTtBQUlsQkUsaUNBQUtBLEdBSmE7QUFLbEJLLHFDQUFTLEtBQ0gsbUJBREcsR0FFSCxHQUZHLEdBR0hiLElBSEcsR0FJSCxJQUpHLEdBS0gsZ0JBVlk7QUFXbEJjLDBDQUFjLEtBQ1IsbUJBRFEsR0FFUixHQUZRLEdBR1JDLGdCQUFNQyxPQUFOLENBQWNoQixJQUFkLENBSFEsR0FJUixJQUpRLEdBS1I7QUFoQlkseUJBQXRCO0FBa0JBSCwrQkFBT0MseUJBQVA7QUFDSDtBQUNKO0FBQ0osYUFyQ0Q7QUFzQ0g7QUFDSixLQTVDeUM7QUFBQSxDQUF6QixDQUFkIiwiZmlsZSI6InByb3BlcnR5LW5vdC1leGlzdGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBwcm9wZXJ0eS1ub3QtZXhpc3RlZCDnmoTmo4DmtYvpgLvovpHvvIzmo4DmtYvlsZ7mgKfmmK/lkKblrZjlnKhcbiAqIEBhdXRob3IgaWVsZ25hdyh3dWppMDIyM0BnbWFpbC5jb20pXG4gKi9cblxuaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJztcbmltcG9ydCBwb3N0Y3NzIGZyb20gJ3Bvc3Rjc3MnO1xuXG5pbXBvcnQge2dldFByZWZpeExpc3R9IGZyb20gJy4uL3ByZWZpeGVzJztcblxuY29uc3QgcHJlZml4TGlzdCA9IGdldFByZWZpeExpc3QoKTtcblxuLyoqXG4gKiDlvZPliY3mlofku7bmiYDku6PooajnmoTop4TliJnlkI3np7BcbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmNvbnN0IFJVTEVOQU1FID0gJ3Byb3BlcnR5LW5vdC1leGlzdGVkJztcblxuLyoqXG4gKiDlhbfkvZPnmoTmo4DmtYvpgLvovpFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyDlj4LmlbBcbiAqIEBwYXJhbSB7Kn0gb3B0cy5ydWxlVmFsIOW9k+WJjeinhOWImeWFt+S9k+mFjee9rueahOWAvFxuICogQHBhcmFtIHtzdHJpbmd9IG9wdHMuZmlsZUNvbnRlbnQg5paH5Lu25YaF5a65XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlUGF0aCDmlofku7bot6/lvoRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrID0gcG9zdGNzcy5wbHVnaW4oUlVMRU5BTUUsIG9wdHMgPT5cbiAgICAoY3NzLCByZXN1bHQpID0+IHtcblxuICAgICAgICBpZiAob3B0cy5ydWxlVmFsKSB7XG5cbiAgICAgICAgICAgIGNzcy53YWxrRGVjbHMoZGVjbCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGdsb2JhbC5DU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UID49IG9wdHMubWF4RXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IHByb3AgPSBkZWNsLnByb3A7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhbmRhcmRQcm9wZXJ0eSA9IHByb3AucmVwbGFjZSgvXlxcLSh3ZWJraXR8bW96fG1zfG8pXFwtL2csICcnKTtcbiAgICAgICAgICAgICAgICAvLyDmoIflh4bmqKHlvI/lnKggcHJlZml4TGlzdCDkuK3vvIzpgqPkuYjlpoLmnpwgcHJvcGVydHlOYW1lIOS4jeWcqCBwcmVmaXhMaXN0IOS4rVxuICAgICAgICAgICAgICAgIC8vIOWNs+i/meS4quWxnuaAp+eUqOmUmeS6hu+8jOS+i+WmgiAtby1hbmltYXRpb25cbiAgICAgICAgICAgICAgICBpZiAocHJlZml4TGlzdC5pbmRleE9mKHN0YW5kYXJkUHJvcGVydHkpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByZWZpeExpc3QuaW5kZXhPZihwcm9wKSA8PSAtMSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2UgPSBkZWNsLnNvdXJjZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBzb3VyY2Uuc3RhcnQubGluZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbCA9IHNvdXJjZS5zdGFydC5jb2x1bW47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuKFJVTEVOQU1FLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZTogZGVjbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydWxlTmFtZTogUlVMRU5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZTogbGluZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2w6IGNvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdDdXJyZW50IHByb3BlcnR5ICdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnYCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyBwcm9wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2AgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdpcyBub3QgZXhpc3RlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JNZXNzYWdlOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdDdXJyZW50IHByb3BlcnR5ICdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnYCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyBjaGFsay5tYWdlbnRhKHByb3ApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2AgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdpcyBub3QgZXhpc3RlZCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuKTtcbiJdfQ==